一、环境准备
   类型           IP地址                     操作系统           内存             硬盘
  master         192.168.0.198             centos7.9         8G          20G
  node1           192.168.0.202             centos7.9         8G          20G


1、为了在安装的时候方便修改所有主机host文件和hostname：
# vim /etc/hosts

192.168.0.198   master-1
192.168.0.202   node-1
#定义的控制台访问域名，在inventory.ini文件中定义
192.168.0.198 master.lau.shinemo.net

#（192.168.0.198）
# hostnamectl  set-hostname  master-1


#（192.168.0.202）
# hostnamectl  set-hostname node-1

2、所有主机开启SELINUX（官方推荐，不开启会导致安装失败）
vi /etc/selinux/config

# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=enforcing
# SELINUXTYPE= can take one of three values:
#     targeted - Targeted processes are protected,
#     minimum - Modification of targeted policy. Only selected processes are protected.
#     mls - Multi Level Security protection.
SELINUXTYPE=targeted

3、配置所有主机ssh免密访问
在所有节点上以root账号登陆，并进入到/root的主目录 在所有节点上生成密钥对
# ssh-keygen -t rsa
一路按回车即可

所有服务器执行
ssh-copy-id master-1
ssh-copy-id node-1


4、修改dns
# cat /etc/resolv.conf
# Generated by NetworkManager
search lau.lau.example
nameserver 192.168.0.254


二、安装依赖包
1、所有主机执行更新操作
yum install -y update

已加载插件：fastestmirror
Determining fastest mirrors
base                                                                                                                                  | 3.6 kB  00:00:00    
extras                                                                                                                                | 2.9 kB  00:00:00    
updates                                                                                                                              | 2.9 kB  00:00:00    
(1/2): extras/7/x86_64/primary_db                                                                                      | 243 kB  00:00:00    
(2/2): updates/7/x86_64/primary_db                                                                                    |  13 MB  00:00:00    
没有可用软件包 update。
错误：无须任何处理


2、所有主机安装docker
yum install docker-1.13.1 -y

3、所有主机添加阿里云镜像加速器并修改docker工作目录
mkdir -p /etc/docker /data/docker

tee /etc/docker/daemon.json <<-'EOF'

{

  "registry-mirrors": ["https://pkeh50sq.mirror.aliyuncs.com"],
  "insecure-registries": ["192.168.0.40"],
  "graph": "/data/docker"

}

EOF

systemctl daemon-reload
systemctl enable docker
systemctl restart docker


#可以提前缓存镜像
docker pull registry.access.redhat.com/openshift3/registry-console:v3.11
docker pull quay.io/openshift/origin-node:v3.11
docker pull quay.io/openshift/origin-control-plane:v3.11
docker pull quay.io/openshift/origin-deployer:v3.11.0
docker pull quay.io/openshift/origin-pod:v3.11
docker pull quay.io/openshift/origin-pod:v3.11.0
docker pull quay.io/coreos/etcd:v3.2.32
docker pull quay.io/openshift/origin-console:v3.11
docker pull quay.io/openshift/origin-web-console:v3.11
docker pull docker.io/openshift/prometheus-node-exporter:v0.16.0
docker pull quay.io/coreos/kube-rbac-proxy:v0.3.1

4、# 192.168.0.198 master 安装
使用官方推荐的2.6版本，因为3.11对应的ansible版本必须是2.6
yum -y install PyYAML  python-crypto python-httplib2 python-jinja2 python-keyczar python-paramiko python-setuptools python-six  python2-jmespath  sshpass
rpm -ivh https://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin311/Packages/p/python-keyczar-0.71c-2.el7.noarch.rpm
rpm -ivh https://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin311/Packages/a/ansible-2.6.5-1.el7.noarch.rpm

5、 新建 ansible inventory 文件，保存到 /etc/ansible/inventory.ini文件中，内容如下：
# cat /etc/ansible/inventory.ini   
# Create an OSEv3 group that contains the masters, nodes, and etcd groups
[OSEv3:children]
masters
nodes
etcd

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
# SSH user, this user should allow ssh based auth without requiring a password
ansible_ssh_user=root
openshift_deployment_type=origin
openshift_image_tag=v3.11
# If ansible_ssh_user is not root, ansible_become must be set to true
ansible_become=true


# default selectors for router and registry services
# openshift_router_selector='node-role.kubernetes.io/infra=true'
# openshift_registry_selector='node-role.kubernetes.io/infra=true'

# uncomment the following to enable htpasswd authentication; defaults to DenyAllPasswordIdentityProvider
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]
openshift_disable_check=memory_availability,disk_availability,docker_image_availability

os_sdn_network_plugin_name=redhat/openshift-ovs-multitenant


# 方便访问使用，指定web console 端口为443以及域名  默认是8443端口  如果要使用   就注销掉下边两行
#openshift_master_api_port=443
#openshift_master_console_port=443
openshift_hosted_router_replicas=1
openshift_hosted_registry_replicas=1
# 自己的域名  如果是内网 则在路由器解析
openshift_master_cluster_hostname=master.zhangjt.shinemo.net
openshift_master_cluster_public_hostname=master.zhangjt.shinemo.net
openshift_master_default_subdomain=zhangjt.shinemo.net


openshift_master_cluster_method=native
 # 如果没有公网ip就写内网mster的ip
openshift_public_ip=192.168.0.198  
# false
ansible_service_broker_install=false
openshift_enable_service_catalog=false
template_service_broker_install=false
openshift_logging_install_logging=false

# registry passwd
#oreg_url=172.16.37.12:5000/openshift3/ose-${component}:${version}
#openshift_examples_modify_imagestreams=true

# docker config
#openshift_docker_additional_registries=172.16.37.12:5000,172.30.0.0/16
#openshift_docker_insecure_registries=172.16.37.12:5000,172.30.0.0/16
#openshift_docker_blocked_registries
#openshift_docker_options="--log-driver json-file --log-opt max-size=1M --log-opt max-file=3"

# openshift_cluster_monitoring_operator_install=false
# openshift_metrics_install_metrics=true
# openshift_enable_unsupported_configurations=True
#openshift_logging_es_nodeselector='node-role.kubernetes.io/infra: "true"'
#openshift_logging_kibana_nodeselector='node-role.kubernetes.io/infra: "true"'
# host group for masters

[masters]
#master-[1:2]   # 如果只有一个节点  就只写一个1  如果有三个 就写1:3   这里写的是hostname  根据具体情况修改
master-1

[etcd]
#master-[1:2]  # 同上
master-1

[nodes]
#master-[1:2] openshift_node_group_name='node-config-master'  # 同上
master-1 openshift_node_group_name='node-config-master'
node-1 openshift_node_group_name='node-config-compute'
node-1 openshift_node_group_name='node-config-infra'


6、下载opensift-ansible项目(需要安装git):
yum install -y git
 cd  /root && git clone https://github.com/openshift/openshift-ansible
# 切换到release-v3.11
 cd  openshift-ansible && git checkout release-3.11

vim /etc/yum.repos.d/CentOS-OpenShift-Origin311.repo
[centos-openshift-origin311]
name=CentOS OpenShift Origin
baseurl=http://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin311/
enabled=1
gpgcheck=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-PaaS

[centos-openshift-origin311-testing]
name=CentOS OpenShift Origin Testing
baseurl=http://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin311/
enabled=0
gpgcheck=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-PaaS

[centos-openshift-origin311-debuginfo]
name=CentOS OpenShift Origin DebugInfo
baseurl=http://debuginfo.centos.org/centos/7/paas/x86_64/
enabled=0
gpgcheck=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-PaaS

[centos-openshift-origin311-source]
name=CentOS OpenShift Origin Source
baseurl=http://vault.centos.org/centos/7/paas/Source/openshift-origin311/
enabled=0
gpgcheck=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-PaaS

/bin/cp /etc/yum.repos.d/CentOS-OpenShift-Origin311.repo /root/openshift-ansible/roles/openshift_repos/templates/CentOS-OpenShift-Origin311.repo.j2
scp /etc/yum.repos.d/CentOS-OpenShift-Origin311.repo node-1:/etc/yum.repos.d/CentOS-OpenShift-Origin311.repo

yum clean all && yum makecache

三. 安装OKD
1. 安装检查:
ansible-playbook -i /etc/ansible/inventory.ini openshift-ansible/playbooks/prerequisites.yml

执行检查无误后，执行安装程序   如果出现错误，根据错误提示来修改。 /var/log/messages

PLAY RECAP **************************************************************************************************************************************************
localhost                  : ok=11   changed=0    unreachable=0    failed=0  
master-1 : ok=89   changed=17   unreachable=0    failed=0  
node-1 : ok=62   changed=16   unreachable=0    failed=0  


INSTALLER STATUS ********************************************************************************************************************************************
Initialization  : Complete (0:01:12)


2. 执行安装程序
ansible-playbook -i /etc/ansible/inventory.ini openshift-ansible/playbooks/deploy_cluster.yml

安装完成后可以看到类似如下提示.

可以清楚的看到安装结果，如果有失败，寻找原因再次安装:  或者查看/var/log/message 的日志
PLAY RECAP ***************************************************************************************************************************************************************************************
localhost                  : ok=11   changed=0    unreachable=0    failed=0
master-1                   : ok=599  changed=198  unreachable=0    failed=0
master-2                   : ok=263  changed=72   unreachable=0    failed=0
node-1                     : ok=110  changed=16   unreachable=0    failed=0


INSTALLER STATUS *********************************************************************************************************************************************************************************
Initialization               : Complete (0:01:55)
Health Check                 : Complete (0:00:14)
Node Bootstrap Preparation   : Complete (0:04:18)
etcd Install                 : Complete (0:01:56)
Master Install               : Complete (0:13:01)
Master Additional Install    : Complete (0:02:18)
Node Join                    : Complete (0:01:16)
Hosted Install               : Complete (0:02:50)
Cluster Monitoring Operator  : Complete (0:01:21)
Web Console Install          : Complete (0:01:08)
Console Install              : Complete (0:00:52)
metrics-server Install       : Complete (0:00:03)


查看安装结果
oc get nodes
NAME       STATUS    ROLES     AGE       VERSION
master-1   Ready     master    19m       v1.11.0+d4cacc0
master-2   Ready     master    19m       v1.11.0+d4cacc0
node-1     Ready     infra     10m       v1.11.0+d4cacc0

#增加pod默认选择标签给所有节点
kubectl  label nodes node-1 node-role.kubernetes.io/compute=true
kubectl  label nodes master-1 node-role.kubernetes.io/compute=true

4. 创建super account,使用简单的文件密码配置登陆web控制台

# htpasswd -cb /etc/origin/master/htpasswd admin 123456

Adding password for user admin

# oc adm policy add-cluster-role-to-user cluster-admin admin

Warning: User 'admin' not found
cluster role "cluster-admin" added: "admin"


登录
oc login https://master.zhangjt.shinemo.net:8443 -u admin -p'123456'

退出
oc logout

https://master.zhangjt.shinemo.net:8443
admin 
123456

#本地解析 也可以在路由器做通配
192.168.0.198  master.zhangjt.shinemo.net
192.168.0.202  console.zhangjt.shinemo.net （*.zhangjt.shinemo.net）

卸载命令
ansible-playbook -i okd.hosts openshift-ansible/playbooks/adhoc/uninstall.yml
